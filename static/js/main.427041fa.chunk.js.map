{"version":3,"sources":["components/TheNavigation.tsx","components/movies/MoviesSearchForm.tsx","components/movies/Movie.tsx","components/movies/MoviesList.tsx","views/Movies.tsx","views/Details.tsx","views/Favorite.tsx","App.tsx","redux/contants/actionTypes.ts","redux/reducer/reducer.ts","redux/reducer/index.ts","redux/store.ts","index.tsx"],"names":["TheNavigation","state","useSelector","savedUrlDetail","undefined","allMovies","detail","className","to","MoviesSearchForm","props","searchInput","useRef","onSubmit","e","preventDefault","searchString","current","value","onSearch","searchForMovie","autoFocus","type","ref","Movie","dispatch","useDispatch","movie","onClick","playload","linkApi","title","src","poster","alt","year","MoviesList","movies","map","Movies","useState","setMovies","useEffect","extractData","Title","Year","imdbID","Type","Poster","query","axios","get","encodeURI","then","response","data","Response","ombMovies","Search","filter","seen","Set","filteredArr","duplicate","has","add","Details","movieId","useParams","Released","Runtime","Genre","Director","Writer","Actors","Country","Plot","imdbRating","movieDetails","setMovieDetails","a","result","movieDetail","fetchData","Object","keys","length","favorites","some","item","find","Favorite","favoriteMovies","handleClickRemove","id","JSON","parse","target","dataset","onclickparam","data-onclickparam","stringify","App","path","component","exact","actionTypes","initialState","reducers","combineReducers","params","push","historia","forEach","element","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.427041fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n// Styles\r\nimport './TheNavigation.scss';\r\n\r\n\r\n\r\nconst TheNavigation = () => {\r\n\r\n    const state = useSelector((state:any) => state)\r\n    let savedUrlDetail: string = \"/details\"\r\n\r\n    // save details MOVIE param\r\n    if(state.allMovies.detail !== undefined){\r\n       savedUrlDetail = \"/details/\"+state.allMovies.detail\r\n    }\r\n\r\n    return (\r\n\r\n        <nav className=\"navigation\">\r\n            <NavLink to=\"/firstReactApp/\">Movies</NavLink>\r\n            <NavLink to={savedUrlDetail}>Details</NavLink>\r\n            <NavLink to=\"/favorite\">Favorite</NavLink>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default TheNavigation\r\n","import React, {FormEvent, useRef } from 'react'\r\n\r\n// STYLES && ASSETS\r\nimport './MoviesSearchForm.scss';\r\n\r\ninterface Props {\r\n    onSearch: (query: string) => void\r\n}\r\n\r\n\r\n\r\nconst MoviesSearchForm = (props: Props) => {\r\n\r\n\r\n    const searchInput = useRef<HTMLInputElement>(null)\r\n\r\n    const searchForMovie = () => {\r\n        let searchString = searchInput.current?.value\r\n        if (searchString) props.onSearch(searchString)\r\n\r\n    }\r\n\r\n    // Handle submit\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        searchForMovie()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n             <input autoFocus type=\"text\" ref={searchInput} className=\"search\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MoviesSearchForm\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport  {ListMovies}  from '../../types/types'\r\n\r\nimport './Movie.scss'\r\n\r\ninterface Props {\r\n    movie: ListMovies\r\n    \r\n}\r\n\r\nconst Movie = (props: Props) => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {movie} = props\r\n\r\n    const handleClick = () => {\r\n      //  alert(movie.linkApi)\r\n\r\n      dispatch({\r\n        type: \"SELECTED_MOVIE\",\r\n        playload: movie.linkApi\r\n    });\r\n\r\n    }\r\n\r\n    return (\r\n        <article className=\"movie\" onClick={handleClick}>\r\n            <Link to={`/details/${movie.linkApi}`}>\r\n            <div className=\"inside\">\r\n                <h2>{movie.title}</h2>\r\n                <div className=\"imgMovie\">\r\n                    <img src={movie.poster} alt=\"movie art\" />\r\n                </div>\r\n            </div>\r\n            <footer className=\"meta\">{movie.type + ' - ' + movie.year}</footer>\r\n            </Link>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\n\r\nimport  {ListMovies}  from '../../types/types'\r\nimport Movie from './Movie'\r\n\r\n\r\n// STYLES && ASSETS\r\nimport './MovieList.scss'\r\n\r\n\r\ninterface Props {\r\n\r\n    movies: ListMovies[]\r\n}\r\n\r\nconst MoviesList = (props: Props) => {\r\n\r\n\r\n    const {movies} = props\r\n\r\n\r\n\r\n    return (\r\n\r\n        <ul className=\"moviesList\">\r\n                {movies.map(movie => (\r\n                    <li key={movie.linkApi}><Movie movie={movie}/></li>\r\n                ))}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default MoviesList\r\n","import axios from 'axios';\r\nimport React, {useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n// Components\r\nimport MoviesSearchForm from \"../components/movies/MoviesSearchForm\";\r\nimport MoviesList from \"../components/movies/MoviesList\";\r\n\r\n// Types\r\nimport  {MoviesFromApi}  from '../types/types'\r\n\r\n\r\n\r\nconst Movies = () => {\r\n\r\n\r\n    const [movies, setMovies] = useState([])\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state:any) => state.allMovies.movies)\r\n\r\n\r\n  // Aby sa nenacitavalo znova\r\n    useEffect(() => {\r\n\r\n      if(state !== undefined) {\r\n        let oldArrays = state\r\n        setMovies(oldArrays)\r\n       // console.log(\"pridany\")\r\n      }\r\n    }, [state]);\r\n\r\n\r\n    // Search movie \r\n    const handleSearch = (query: string) => {\r\n          axios.get(\r\n            `https://omdbapi.com/?apikey=9304018a&s=${encodeURI(query)}`\r\n         ).then(response => {\r\n\r\n          if(response.data.Response === \"True\") {\r\n\r\n            // All data to ombMovies\r\n            let ombMovies = response.data.Search.filter((movie: any) => movie.Poster !== \"N/A\").map((movie: any) => extractData(movie))\r\n\r\n            // Filter duplicate data by linkApi\r\n              const seen = new Set();\r\n              const filteredArr = ombMovies.filter((movie: { linkApi: unknown; }) => {\r\n                const duplicate = seen.has(movie.linkApi);\r\n                seen.add(movie.linkApi);\r\n                return !duplicate;\r\n              });\r\n              \r\n            setMovies(filteredArr)\r\n            \r\n              // save objects with REDUX\r\n            dispatch({\r\n              type: \"SET_MOVIE\",\r\n              playload: filteredArr\r\n          });\r\n          }\r\n\r\n         })\r\n        \r\n         \r\n   }\r\n\r\n\r\n\r\n   const extractData = ({\r\n       Title: title,\r\n       Year: year, \r\n       imdbID : linkApi,\r\n       Type: type,\r\n       Poster: poster\r\n    }: MoviesFromApi) => {\r\n       return {title, year, linkApi, type, poster}\r\n   }\r\n\r\n\r\n\r\n    return (\r\n        <article className=\"movies\">\r\n            <h1>Movies</h1>\r\n            <MoviesSearchForm onSearch={handleSearch}/>\r\n            <MoviesList movies={movies} />\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams} from \"react-router\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n// STYLES && ASSETS\r\nimport './Details.scss'\r\n\r\n\r\nconst Details = () => {\r\n\r\n    const state = useSelector((state:any) => state)\r\n    const dispatch = useDispatch();\r\n    const { movieId } = useParams<{ movieId: string }>();\r\n    const [movieDetails, setMovieDetails] = useState(\r\n        {\r\n            Title: \"\",\r\n            Released: \"released\", \r\n            Runtime : \"runtime\",\r\n            Genre: \"genre\",\r\n            Director: \"director\",\r\n            Writer: \"writer\",\r\n            Actors: \"actors\",\r\n            Country: \"country\",\r\n            Plot: \"plot\",\r\n            imdbRating: \"rating\",\r\n            Poster: \"poster\",\r\n            imdbID : \"link\",\r\n         })\r\n\r\n\r\n\r\n      useEffect(() => {\r\n        const fetchData = async () => {\r\n          const result = await axios(\r\n            `http://omdbapi.com/?apikey=9304018a&i=${encodeURI(movieId)}`\r\n          );\r\n\r\n            let movieDetail = result.data\r\n           // console.log(result.data)\r\n            setMovieDetails(movieDetail) \r\n        };\r\n     \r\n        fetchData();\r\n      }, [movieId]);\r\n\r\n\r\n\r\n\r\n      const handleClickDetail = () => {\r\n        let detail: string = state.allMovies.detail\r\n        const objMovies:[] = state.allMovies.movies;\r\n        const result = objMovies.find( ({ linkApi }) => linkApi === detail );\r\n\r\n        \r\n\r\n\r\n        // Duplicite cant add\r\n        if(state.allMovies.favorites !== undefined && state.allMovies.favorites.find( ({ linkApi }:any) => linkApi === detail )) {\r\n        }else if(state.allMovies.favorites === undefined){\r\n            dispatch({\r\n                type: \"ADD_FAVORITE\",\r\n                playload: result\r\n            });\r\n\r\n        }else{\r\n            dispatch({\r\n                type: \"ADD_FAVORITE\",\r\n                playload: result\r\n            });\r\n        }\r\n          \r\n      }\r\n\r\n\r\n\r\n    return (\r\n             <div>\r\n                 <h1>Movie details </h1>\r\n\r\n\r\n            {Object.keys(movieDetails.Title).length === 0 ? (<div>...Loading</div>) :\r\n                (\r\n                    <article className=\"detailMovie\">\r\n                        <div className=\"detailInside\">\r\n                             <div className=\"divstar\">\r\n                                 <span className={state.allMovies.favorites && state.allMovies.favorites.some((item:any) => item.linkApi === state.allMovies.detail) ? \"star starActive\" : \"star\"}  onClick={handleClickDetail}>\r\n                              {state.allMovies.favorites && state.allMovies.favorites.some((item:any) => item.linkApi === state.allMovies.detail) ? \"★\" : \"☆\"} </span></div>\r\n                            <h2>{movieDetails.Title}</h2>\r\n                            <div>\r\n                                <div className=\"detailDivPicture\"><img src={movieDetails.Poster} alt=\"movie art\" /> </div>\r\n\r\n                                <div className=\"detailText\">  \r\n                                    <p> <strong>Rating:</strong> {movieDetails.imdbRating} </p>\r\n                                    <p> <strong>Genre:</strong> {movieDetails.Genre} </p> \r\n                                    <p> <strong>Runtime:</strong> {movieDetails.Runtime} </p> \r\n                                    <p> <strong>Country:</strong> {movieDetails.Country} </p> \r\n                                    <p> <strong>Director:</strong> {movieDetails.Director}  </p> \r\n                                    <p> <strong>Writer:</strong> {movieDetails.Writer}  </p> \r\n                                    <p> <strong>Actor:</strong> {movieDetails.Actors} </p> \r\n                                    <p> <strong>Released:</strong>  {movieDetails.Released}</p> \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"plot\">\r\n                                 Plot: {movieDetails.Plot} \r\n                            </div>\r\n\r\n                        </div>\r\n                    </article>\r\n                )}\r\n\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// STYLES && ASSETS\r\nimport './Favorite.scss'\r\n\r\n\r\n\r\nconst Favorite = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state:any) => state)\r\n\r\n    let favoriteMovies = [] as any;\r\n    favoriteMovies = state.allMovies.favorites\r\n\r\n\r\n    const handleClickRemove = (e:any) => {\r\n\r\n        const { id } = JSON.parse(e.target.dataset.onclickparam)\r\n        const favoritiesMovies:[] = state.allMovies.favorites;\r\n        const result = favoritiesMovies.filter((movie: any) => movie.linkApi !== id); // Remove by ID\r\n          \r\n        dispatch({\r\n          type: \"DELETE_FAVORITE\",\r\n          playload: result\r\n      });\r\n\r\n      }\r\n\r\n\r\n    return (\r\n\r\n    <div>\r\n        <h1>Favorite movies</h1>\r\n        <ul className=\"moviesList\">\r\n\r\n        {Object(favoriteMovies).length === undefined  ? (<div>Nothing, You need to search for a movie and add it to your favorites</div>) : \r\n            \r\n            favoriteMovies.map((movie:any) => (\r\n                    <li key={movie.linkApi}>\r\n                        \r\n                        <article className=\"movieFavorite\">\r\n                            <div className=\"inside\">\r\n                                <h2>{movie.title}</h2>\r\n                                <div className=\"imgMovie\">\r\n                                    <img src={movie.poster} alt=\"movie art\" />\r\n                                    <Link to={`/details/${movie.linkApi}`}><div className=\"btn btnDetail\"> Details </div></Link>\r\n                                    <div className=\"btn btnRemove\" onClick={handleClickRemove} data-onclickparam={JSON.stringify({ id: movie.linkApi }) }> Remove </div>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                        \r\n                    </li>\r\n                ))\r\n\r\n            \r\n            \r\n            } \r\n\r\n\r\n\r\n        \r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite\r\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\n\n// STYLES && ASSETS\nimport './App.scss';\n\n// COMPONENTS\nimport TheNavigation from \"./components/TheNavigation\";\n\n//views\nimport Movies from './views/Movies';\nimport Details from './views/Details';\nimport Favorite from './views/Favorite';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n            <TheNavigation  />\n      </header>\n\n      <main className=\"content\">\n          <Switch>\n              <Route path=\"/firstReactApp/\" component={Movies} exact />\n              <Route path=\"/details/:movieId\" component={Details} />\n              <Route path=\"/favorite\" component={Favorite} />\n           </Switch>\n\n\n        </main>   \n\n    </div>\n  );\n}\n\nexport default App;\n","export const actionTypes = {\r\n    SET_MOVIE: \"SET_MOVIE\",\r\n    SELECTED_MOVIE: \"SELECTED_MOVIE\",\r\n    ADD_FAVORITE: \"ADD_FAVORITE\",\r\n    DELETE_FAVORITE: \"DELETE_FAVORITE\"\r\n}","import { actionTypes } from \"../contants/actionTypes\";\r\n\r\nconst initialState = {}\r\n\r\n\r\nexport const setReducer = (state: any = initialState, {type, playload}:any ) => {\r\n\r\n    const params = [] as any;\r\n\r\n        switch (type) {\r\n            case actionTypes.SET_MOVIE:\r\n                return {...state, movies:playload}\r\n\r\n            case actionTypes.SELECTED_MOVIE:\r\n                return {...state, detail:playload}\r\n\r\n\r\n            case actionTypes.ADD_FAVORITE: {\r\n\r\n               if(state.favorites === undefined){\r\n                   params.push(playload)\r\n                return {...state, favorites: params}\r\n               } else{\r\n                   let historia = state.favorites;\r\n                   historia.push(playload)\r\n\r\n                   historia.forEach((element:any) => {\r\n                         params.push(element)\r\n                   });\r\n\r\n                return {...state, favorites: params}\r\n               }\r\n\r\n            }\r\n\r\n            case actionTypes.DELETE_FAVORITE:\r\n\r\n                return {...state, favorites:playload}\r\n            \r\n\r\n            default:\r\n                return state\r\n        }\r\n\r\n}","import { combineReducers } from \"redux\";\r\n//import { selectedMovie } from \"../actions/actions\";\r\nimport {setReducer} from \"./reducer\"\r\n\r\nconst reducers = combineReducers({\r\n    allMovies: setReducer\r\n})\r\n\r\nexport default reducers;","import { createStore } from 'redux'\r\nimport reducers from './reducer/index'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { applyMiddleware } from '@reduxjs/toolkit';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  composeWithDevTools(\r\n    applyMiddleware()\r\n  )\r\n)\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n    <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}